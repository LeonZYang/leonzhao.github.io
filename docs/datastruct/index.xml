<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文章列表 on LeonZhao Home</title>
    <link>https://leonzyang.github.io/datastruct/</link>
    <description>Recent content in 文章列表 on LeonZhao Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 18 Apr 2021 15:30:41 +0800</lastBuildDate><atom:link href="https://leonzyang.github.io/datastruct/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>队列</title>
      <link>https://leonzyang.github.io/datastruct/queue/</link>
      <pubDate>Sun, 18 Apr 2021 15:30:41 +0800</pubDate>
      
      <guid>https://leonzyang.github.io/datastruct/queue/</guid>
      <description>队列 队列是一种先入先出（FIFO）的线性表，插入元素的一端称为队尾，删除元素的一端称为队头
实现 class Queue: def __init__(self): self.data = [] def enqueue(self, ele): self.data.append(ele) def dequeue(self): return self.data.pop(0) 用栈实现队列 如何用栈实现一个队列
class Queue: def __init__(self): self.s1 = [] self.s2 = [] def enqueue(self, ele): self.s1.append(ele) def dequeue(self): while len(self.s1) &amp;gt; 0: self.s2.append(self.s1.pop()) return self.s2.pop() 双端队列 双端队列允许队尾和队头都支持插入和删除
class Dequeue: def __init__(self): self.data = [] def addFront(self, ele): self.data.append(ele) def addRear(self, ele): self.data.insert(0, ele) def removeFront(self): self.data.pop() def removeRear(self): self.data.pop(0) def isEmpty(self) -&amp;gt; bool: return len(self.</description>
    </item>
    
  </channel>
</rss>
